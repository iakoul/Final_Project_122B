Our team did not use the fabflix movie database. We used our own data and scheme.


Servers and addresses:

We did not want to set up HTTPS for project 5 so we made a new main server, but we kept the old one for the HTTPS part of task 3. So, there is a main server which handles load balancing and hosts the HTTP single instance applications and there is a second server which hosts the HTTPS version of our website, with connection pooling and prepared statements.


Login information is

username: admin
password: admin

and we have disabled ReCaptcha for Jmeter purposes, so there is no need to solve the ReCaptcha because the code doesn't check it.

We made separate applications for non-connection pooling and non-prepared statement versions of the website.

HTTPS Server:

	https://13.115.244.57:8443/project5_95_https/

Load balancing and main server:
	13.112.126.210

	Single Instance Connection pooling and Prepared Statements:
	http://13.112.126.210:8080/project5_95/

	Single Instance No connection pooling:
	http://13.112.126.210:8080/project5_95_noconpool/

	Single Instance No Prepared Statements:
	http://13.112.126.210:8080/project5_95_nops/
	
	Scaled Connection pooling and Prepared Statements:
	http://13.112.126.210/project5_95/
	
	Scaled No connection pooling:
	http://13.112.126.210/project5_95_noconpool/

	Scaled No Prepared Statements:
	http://13.112.126.210/project5_95_nops/
	
MySQL Master server:
	54.178.201.11
	
MySQL Slave server:
	13.112.223.10
	
Google Cloud load balancing and main server:
	35.185.246.190
	
	Single Instance Connection pooling and Prepared Statements:
	http://35.185.246.190:8080/project5_95/

	Single Instance No connection pooling:
	http://35.185.246.190:8080/project5_95_noconpool/

	Single Instance No Prepared Statements:
	http://35.185.246.190:8080/project5_95_nops/
	
	Single Instance Connection pooling and Prepared Statements:
	http://35.185.246.190/project5_95/
	
	Scaled No connection pooling:
	http://35.185.246.190/project5_95_noconpool/

	Scaled No Prepared Statements:
	http://35.185.246.190/project5_95_nops/	
	
The version of the website we are including with this README is the one that includes both connection pooling and prepared statements.

Ports 80 and 8080 on all these servers are open to the required IP address range, 128.195.0.0/16.


Logging and script for parsing the log file:

The script for parsing the log file we generate in our application is called average_times.py and it is written in Python 3. To use it, place the script and the timing.log file generated by our application (on Windows, this file was placed in our Eclipse install folder and on Linux it was placed in our user home folder) and run it using the following commands from a terminal or command prompt.

Windows:
py -3 average_times.py

Linux:
python3 average_times.py

The script assumes the file is present and called timing.log. It reads each line, splits the line on ":", and puts the split line into a list. When this is done, the list will contain the TS time at position 1 and TJ time at position 3. Then it writes them out to the console as well as adds it to internal variables. Once it finishes looping through the file, it calculates the average of those values and prints the averages out to the console.